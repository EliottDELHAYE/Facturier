(()=>{"use strict";function t(t,e,i){const n=i.value;return{configurable:!0,enumerable:!1,get(){return n.bind(this)}}}class e{constructor(t,e,i,n,s,o,r,d,a,l,c,h){this.documentType=t,this.firstName=e,this.lastName=i,this.address=n,this.country=s,this.town=o,this.zip=r,this.product=d,this.price=a,this.quantity=l,this.tva=c,this.date=h}subTotal(t,e,i){return(t+t*(i/100))*e}htmlFormat(){const t=this.subTotal(this.price,this.quantity,this.tva);return`\n        <div id="document-container">\n          <div class="document-header">\n            <div>\n              <img class="logo-ed" src="./medias/Logo ED SVG.svg">\n            </div>\n            <div>\n              <p>${"invoice"===this.documentType?"Facture":"Devis"}<span> N° ${Math.floor(101*Math.random())}</span></p>\n              <p>Date <span>${this.date.toLocaleDateString()}</span></p>\n            </div>\n          </div>\n        \n          <div class="document-informations">\n            <div>\n              <p>ED</p>\n              <p>22 rue des Champs-Élysées</p>\n              <p>75008 Paris</p>\n              <p>Tel: +33 6 36 37 89 27</p>\n            </div>\n            <div>\n              <p>Informations du client</p>\n              <p>${this.lastName} ${this.firstName}</p>\n              <p>${this.address} </p>\n              <p>${this.zip}</p>\n              <p>${this.town}</p>\n              <p>${this.country}</p>\n            </div>\n          </div>\n        \n          <div class="document-product">\n            <div>\n              <table>\n                <thead>\n                  <tr>\n                    <th>Produit/Service</th>\n                    <th>Prix unitaire</th>\n                    <th>Quantité</th>\n                    <th>Total HT</th>\n                  </tr>\n                </thead>\n                <tbody>\n                  <tr>\n                    <td>${this.product}</td>\n                    <td>${this.price} €</td>\n                    <td>${this.quantity}</td>\n                    <td>${this.price*this.quantity} € HT</td>\n                  </tr>\n                </tbody>\n              </table>\n            </div>\n          </div>\n          <div class="document-total">\n            <div>\n              <div>TOTAL TTC</div>\n              <div>${t.toFixed(2)} €</div>\n            </div>\n          </div>\n        </div>\n\n    `}}class i{constructor(t,e){this.oldData=[],this.setItem(t,e)}static checkLocalStorage(){null===localStorage.getItem("invoice")&&localStorage.setItem("invoice","[]"),null===localStorage.getItem("estimate")&&localStorage.setItem("estimate","[]")}setItem(t,e){let i;i=localStorage.getItem(t),null!==i?(this.oldData=JSON.parse(i),this.oldData.push(e),localStorage.setItem(t,JSON.stringify(this.oldData))):document.location.reload()}}class n{constructor(t,e,i){this.container=t,this.hiddenDiv=e,this.btnPrint=i,this.formContainer=document.getElementById("form-container")}render(t,e){const n=t.htmlFormat();this.container.innerHTML=n,new i(e,n),this.btnPrint.innerText="invoice"===e?"Imprimer la facture":"Imprimer le devis",this.hiddenDiv.setAttribute("style","display: contents;"),this.formContainer.innerHTML=""}}class s{constructor(t){this.el=t}print(){document.body.innerHTML=this.el.innerHTML,window.print(),document.location.reload()}}var o=function(t,e,i,n){var s,o=arguments.length,r=o<3?e:null===n?n=Object.getOwnPropertyDescriptor(e,i):n;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)r=Reflect.decorate(t,e,i,n);else for(var d=t.length-1;d>=0;d--)(s=t[d])&&(r=(o<3?s(r):o>3?s(e,i,r):s(e,i))||r);return o>3&&r&&Object.defineProperty(e,i,r),r};class r{constructor(){this.form=document.getElementById("form"),this.type=document.getElementById("type"),this.firstName=document.getElementById("firstName"),this.lastName=document.getElementById("lastName"),this.address=document.getElementById("address"),this.country=document.getElementById("country"),this.town=document.getElementById("town"),this.zip=document.getElementById("zip"),this.product=document.getElementById("product"),this.price=document.getElementById("price"),this.quantity=document.getElementById("quantity"),this.tva=document.getElementById("tva"),this.docContainer=document.getElementById("aspect-ratio-container"),this.hiddenDiv=document.getElementById("hiddenDiv"),this.storedDataDiv=document.getElementById("stored-data"),this.btnPrint=document.getElementById("print"),this.btnReload=document.getElementById("reload"),this.btnStoredInvoices=document.getElementById("stored-invoices"),this.btnStoredEstimates=document.getElementById("stored-estimates"),this.submitFormListener(),this.printListener(),this.reloadListener(),this.getStoredDocsListener()}submitFormListener(){this.form.addEventListener("submit",this.handleFormSubmit)}printListener(){this.btnPrint.addEventListener("click",(()=>{let t;t=new s(this.docContainer),t.print()}))}reloadListener(){this.btnReload.addEventListener("click",(()=>{document.location.reload(),window.scrollTo(0,0)}))}getStoredDocsListener(){this.btnStoredInvoices.addEventListener("click",(()=>this.getItems("invoice"))),this.btnStoredEstimates.addEventListener("click",(()=>this.getItems("estimate")))}getItems(t){if(this.storedDataDiv.hasChildNodes()&&(this.storedDataDiv.innerHTML=""),localStorage.getItem(t)){let e;if(e=localStorage.getItem(t),null!==e&&e.length>2){let t;t=JSON.parse(e),t.map((t=>{let e=document.createElement("div"),i=document.createElement("div");e.classList.add("card-classes"),i.classList.add("card-body"),i.innerHTML=t,e.append(i),this.storedDataDiv.append(e)}))}else this.storedDataDiv.innerHTML=`<div>Aucun${"invoice"===t?"e facture":" devis"} disponible !</div>`}}handleFormSubmit(t){t.preventDefault(),this.hideListDocuments();const i=this.inputDatas();if(Array.isArray(i)){const[t,s,o,r,d,a,l,c,h,m,u]=i;let p,v,y=new Date;p=new e(...i,y),v=new n(this.docContainer,this.hiddenDiv,this.btnPrint),v.render(p,t)}}hideListDocuments(){this.btnStoredInvoices.setAttribute("style","display: none"),this.btnStoredEstimates.setAttribute("style","display: none"),this.storedDataDiv.setAttribute("style","display: none")}inputDatas(){const t=this.type.value,e=this.firstName.value,i=this.lastName.value,n=this.address.value,s=this.country.value,o=this.town.value,r=this.zip.valueAsNumber,d=this.product.value,a=this.price.valueAsNumber,l=this.quantity.valueAsNumber,c=this.tva.valueAsNumber;return r>0&&a>0&&l>0&&c>0?[t,e,i,n,s,o,r,d,a,l,c]:void alert("Les valeurs numériques doivent être supérieur à zéro !")}}o([t],r.prototype,"submitFormListener",null),o([t],r.prototype,"handleFormSubmit",null),new r,i.checkLocalStorage(),console.log("Hello World")})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,